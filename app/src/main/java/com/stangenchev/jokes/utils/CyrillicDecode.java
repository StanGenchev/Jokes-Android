package com.stangenchev.jokes.utils;

public class CyrillicDecode {
    public char[] cp1251Map;

    public String decodeCp1251(byte[] data) {
        if (data == null) {
            return null;
        }
        StringBuffer sb = new StringBuffer(data.length);
        for (byte b : data) {
            sb.append(cp1251Map[b & 255]);
        }
        return sb.toString();
    }

    {
        char[] cArr = new char[256];
        cArr[1] = 1;
        cArr[2] = 2;
        cArr[3] = 3;
        cArr[4] = 4;
        cArr[5] = 5;
        cArr[6] = 6;
        cArr[7] = 7;
        cArr[8] = 8;
        cArr[9] = 9;
        cArr[10] = 10;
        cArr[11] = 11;
        cArr[12] = 12;
        cArr[13] = 13;
        cArr[14] = 14;
        cArr[15] = 15;
        cArr[16] = 16;
        cArr[17] = 17;
        cArr[18] = 18;
        cArr[19] = 19;
        cArr[20] = 20;
        cArr[21] = 21;
        cArr[22] = 22;
        cArr[23] = 23;
        cArr[24] = 24;
        cArr[25] = 25;
        cArr[26] = 26;
        cArr[27] = 27;
        cArr[28] = 28;
        cArr[29] = 29;
        cArr[30] = 30;
        cArr[31] = 31;
        cArr[32] = ' ';
        cArr[33] = '!';
        cArr[34] = '\"';
        cArr[35] = '#';
        cArr[36] = '$';
        cArr[37] = '%';
        cArr[38] = '&';
        cArr[39] = '\'';
        cArr[40] = '(';
        cArr[41] = ')';
        cArr[42] = '*';
        cArr[43] = '+';
        cArr[44] = ',';
        cArr[45] = '-';
        cArr[46] = '.';
        cArr[47] = '/';
        cArr[48] = '0';
        cArr[49] = '1';
        cArr[50] = '2';
        cArr[51] = '3';
        cArr[52] = '4';
        cArr[53] = '5';
        cArr[54] = '6';
        cArr[55] = '7';
        cArr[56] = '8';
        cArr[57] = '9';
        cArr[58] = ':';
        cArr[59] = ';';
        cArr[60] = '<';
        cArr[61] = '=';
        cArr[62] = '>';
        cArr[63] = '?';
        cArr[64] = '@';
        cArr[65] = 'A';
        cArr[66] = 'B';
        cArr[67] = 'C';
        cArr[68] = 'D';
        cArr[69] = 'E';
        cArr[70] = 'F';
        cArr[71] = 'G';
        cArr[72] = 'H';
        cArr[73] = 'I';
        cArr[74] = 'J';
        cArr[75] = 'K';
        cArr[76] = 'L';
        cArr[77] = 'M';
        cArr[78] = 'N';
        cArr[79] = 'O';
        cArr[80] = 'P';
        cArr[81] = 'Q';
        cArr[82] = 'R';
        cArr[83] = 'S';
        cArr[84] = 'T';
        cArr[85] = 'U';
        cArr[86] = 'V';
        cArr[87] = 'W';
        cArr[88] = 'X';
        cArr[89] = 'Y';
        cArr[90] = 'Z';
        cArr[91] = '[';
        cArr[92] = '\\';
        cArr[93] = ']';
        cArr[94] = '^';
        cArr[95] = '_';
        cArr[96] = '`';
        cArr[97] = 'a';
        cArr[98] = 'b';
        cArr[99] = 'c';
        cArr[100] = 'd';
        cArr[101] = 'e';
        cArr[102] = 'f';
        cArr[103] = 'g';
        cArr[104] = 'h';
        cArr[105] = 'i';
        cArr[106] = 'j';
        cArr[107] = 'k';
        cArr[108] = 'l';
        cArr[109] = 'm';
        cArr[110] = 'n';
        cArr[111] = 'o';
        cArr[112] = 'p';
        cArr[113] = 'q';
        cArr[114] = 'r';
        cArr[115] = 's';
        cArr[116] = 't';
        cArr[117] = 'u';
        cArr[118] = 'v';
        cArr[119] = 'w';
        cArr[120] = 'x';
        cArr[121] = 'y';
        cArr[122] = 'z';
        cArr[123] = '{';
        cArr[124] = '|';
        cArr[125] = '}';
        cArr[126] = '~';
        cArr[127] = 127;
        cArr[128] = 1026;
        cArr[129] = 1027;
        cArr[130] = 8218;
        cArr[131] = 1107;
        cArr[132] = 8222;
        cArr[133] = 8230;
        cArr[134] = 8224;
        cArr[135] = 8225;
        cArr[136] = 8364;
        cArr[137] = 8240;
        cArr[138] = 1033;
        cArr[139] = 8249;
        cArr[140] = 1034;
        cArr[141] = 1036;
        cArr[142] = 1035;
        cArr[143] = 1039;
        cArr[144] = 1106;
        cArr[145] = 8216;
        cArr[146] = 8217;
        cArr[147] = 8220;
        cArr[148] = 8221;
        cArr[149] = 8226;
        cArr[150] = 8211;
        cArr[151] = 8212;
        cArr[152] = 65533;
        cArr[153] = 8482;
        cArr[154] = 1113;
        cArr[155] = 8250;
        cArr[156] = 1114;
        cArr[157] = 1116;
        cArr[158] = 1115;
        cArr[159] = 1119;
        cArr[160] = 160;
        cArr[161] = 1038;
        cArr[162] = 1118;
        cArr[163] = 1032;
        cArr[164] = 164;
        cArr[165] = 1168;
        cArr[166] = 166;
        cArr[167] = 167;
        cArr[168] = 1025;
        cArr[169] = 169;
        cArr[170] = 1028;
        cArr[171] = 171;
        cArr[172] = 172;
        cArr[173] = 173;
        cArr[174] = 174;
        cArr[175] = 1031;
        cArr[176] = 176;
        cArr[177] = 177;
        cArr[178] = 1030;
        cArr[179] = 1110;
        cArr[180] = 1169;
        cArr[181] = 181;
        cArr[182] = 182;
        cArr[183] = 183;
        cArr[184] = 1105;
        cArr[185] = 8470;
        cArr[186] = 1108;
        cArr[187] = 187;
        cArr[188] = 1112;
        cArr[189] = 1029;
        cArr[190] = 1109;
        cArr[191] = 1111;
        cArr[192] = 1040;
        cArr[193] = 1041;
        cArr[194] = 1042;
        cArr[195] = 1043;
        cArr[196] = 1044;
        cArr[197] = 1045;
        cArr[198] = 1046;
        cArr[199] = 1047;
        cArr[200] = 1048;
        cArr[201] = 1049;
        cArr[202] = 1050;
        cArr[203] = 1051;
        cArr[204] = 1052;
        cArr[205] = 1053;
        cArr[206] = 1054;
        cArr[207] = 1055;
        cArr[208] = 1056;
        cArr[209] = 1057;
        cArr[210] = 1058;
        cArr[211] = 1059;
        cArr[212] = 1060;
        cArr[213] = 1061;
        cArr[214] = 1062;
        cArr[215] = 1063;
        cArr[216] = 1064;
        cArr[217] = 1065;
        cArr[218] = 1066;
        cArr[219] = 1067;
        cArr[220] = 1068;
        cArr[221] = 1069;
        cArr[222] = 1070;
        cArr[223] = 1071;
        cArr[224] = 1072;
        cArr[225] = 1073;
        cArr[226] = 1074;
        cArr[227] = 1075;
        cArr[228] = 1076;
        cArr[229] = 1077;
        cArr[230] = 1078;
        cArr[231] = 1079;
        cArr[232] = 1080;
        cArr[233] = 1081;
        cArr[234] = 1082;
        cArr[235] = 1083;
        cArr[236] = 1084;
        cArr[237] = 1085;
        cArr[238] = 1086;
        cArr[239] = 1087;
        cArr[240] = 1088;
        cArr[241] = 1089;
        cArr[242] = 1090;
        cArr[243] = 1091;
        cArr[244] = 1092;
        cArr[245] = 1093;
        cArr[246] = 1094;
        cArr[247] = 1095;
        cArr[248] = 1096;
        cArr[249] = 1097;
        cArr[250] = 1098;
        cArr[251] = 1099;
        cArr[252] = 1100;
        cArr[253] = 1101;
        cArr[254] = 1102;
        cArr[255] = 1103;
        cp1251Map = cArr;
    }
}
